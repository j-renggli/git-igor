PROJECT(gitkit)

CMAKE_MINIMUM_REQUIRED(VERSION 3.0)

SET(MAJOR_VERSION 0)
SET(MINOR_VERSION 1)
SET(PATCH_VERSION 0)

SET(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")

SET(SHARED_DATA ${CMAKE_INSTALL_PREFIX}/share/${PROJECT_NAME})
SET(RES_PATH ${SHARED_DATA}/res)

INCLUDE(CPackConfig.cmake)

######## QT ########

INCLUDE(Qt)

INCLUDE_DIRECTORIES(. ${Qt5Core_INCLUDE_DIRS})

######## DEPENDENCIES ########

######## ALL DLLs ########

#ADD_SUBDIRECTORY(testing)

######## SETUP ########

STRING(REPLACE "\\" "\\\\" SHARED_DATA_ESCAPED ${SHARED_DATA})

SET(CMAKE_VERBOSE_MAKEFILE 0)
ADD_COMPILE_OPTIONS(-std=c++11)
SET(CMAKE_CXX_FLAGS "-Wall -ansi -pedantic -g -pg -fpic -fvisibility=hidden -fvisibility-inlines-hidden")
IF(MSVC)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /Zi /Gm-")  # /WX
	SET(FLAGS_DEBUG "/Od /Ob0")
	SET(FLAGS_RELEASE "/Ox /Oi /Ot /Oy /GL /GS- /Gy /D _SECURE_SCL=0")
		SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS} ${FLAGS_DEBUG} -DSHARED_DATA_FOLDER=\"\\\"${PROJECT_SOURCE_DIR}/data\\\"\"")
		SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS} ${FLAGS_RELEASE} -DSHARED_DATA_FOLDER=\"\\\"${SHARED_DATA_ESCAPED}\\\"\"")
ELSE(MSVC)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror -Wno-long-long")
    SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS} -O0 -DDEBUG -DSHARED_DATA_FOLDER=\"\\\"${PROJECT_SOURCE_DIR}/data\\\"\"")
    SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS} -O3 -DSHARED_DATA_FOLDER=\"\\\"${SHARED_DATA_ESCAPED}\\\"\"")
ENDIF(MSVC)

SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY bin)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY bin)

######## SOURCE CODE ########

FILE(GLOB GITKIT_H *.h)
FILE(GLOB GITKIT_BACKEND backend/*.cpp)
FILE(GLOB GITKIT_INTERFACE interface/*.cpp)
FILE(GLOB GITKIT_PREFS preferences/*.cpp)

SET(GITKIT_SRC
#commandline.cpp
gitkit.cpp
mainwin.cpp

${GITKIT_BACKEND}
${GITKIT_INTERFACE}
${GITKIT_PREFS}
)

######## LINKER ########

######## EXECUTABLE ########

ADD_EXECUTABLE(${PROJECT_NAME} ${GITKIT_SRC})

IF (MSVC)
	#GET_TARGET_PROPERTY(QtCore_location Qt5::Core LOCATION)
	#TARGET_LINK_LIBRARIES(${PROJECT_NAME} QtCore_LIBRARIES)
ENDIF (MSVC)

######## INSTALLATION ########

INSTALL(TARGETS ${PROJECT_NAME} RUNTIME DESTINATION bin)
INSTALL(DIRECTORY data/res/icons DESTINATION ${RES_PATH})
INSTALL(DIRECTORY data/res/styles DESTINATION ${RES_PATH})
#SET(BIN_INSTALL_DIR "bin")

